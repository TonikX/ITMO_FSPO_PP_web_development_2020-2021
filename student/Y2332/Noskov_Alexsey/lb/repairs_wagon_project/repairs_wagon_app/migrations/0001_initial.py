# Generated by Django 3.2.2 on 2021-05-15 12:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tab_number', models.IntegerField(null=True, unique=True)),
                ('fio_worker', models.CharField(max_length=30, null=True)),
                ('year_worker', models.IntegerField(null=True)),
                ('base_worker', models.CharField(max_length=50, null=True)),
                ('bonus_worker', models.IntegerField(default=5, null=True)),
                ('number_cart_bank', models.IntegerField(null=True, unique=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Depo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_depo', models.CharField(max_length=80, unique=True)),
                ('ur_address_depo', models.CharField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RepairBrigade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus_persent', models.IntegerField()),
                ('fio_chief', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Wagon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_number', models.IntegerField(unique=True)),
                ('reg_name', models.CharField(max_length=60, unique=True)),
                ('reg_chief', models.CharField(max_length=20, unique=True)),
                ('type', models.CharField(max_length=30)),
                ('type_year', models.IntegerField()),
                ('dop_number', models.IntegerField()),
                ('ralway_addressExternal', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule_works',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.IntegerField()),
                ('work_shift', models.CharField(max_length=10)),
                ('repair_brigade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repairs_wagon_app.repairbrigade')),
            ],
        ),
        migrations.CreateModel(
            name='Repair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resalt', models.CharField(max_length=10)),
                ('reason', models.CharField(max_length=100)),
                ('cost', models.IntegerField(unique=True)),
                ('day_start', models.DateTimeField()),
                ('day_stop', models.DateTimeField()),
                ('type_repair', models.CharField(max_length=15)),
                ('schedule', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='repairs_wagon_app.schedule_works')),
                ('wagon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repairs_wagon_app.wagon')),
            ],
        ),
        migrations.CreateModel(
            name='employment_contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_start', models.DateTimeField()),
                ('day_stop', models.DateTimeField()),
                ('type', models.CharField(max_length=15)),
                ('position', models.CharField(max_length=20)),
                ('salary', models.IntegerField()),
                ('depo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repairs_wagon_app.depo')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='worker',
            name='brigade',
            field=models.ManyToManyField(default=1, null=True, related_name='workers', to='repairs_wagon_app.RepairBrigade'),
        ),
        migrations.AddField(
            model_name='worker',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='worker',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
