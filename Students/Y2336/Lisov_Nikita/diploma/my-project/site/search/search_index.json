{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041f\u0440\u043e\u0435\u043a\u0442 \u043f\u043e \u0443\u0447\u0435\u0431\u043d\u043e\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435 11.01 \u041e\u0431\u0449\u0435\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0421\u0435\u0440\u0432\u0438\u0441, \u0433\u0434\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0432\u044b\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0442\u044c \u043a\u043d\u0438\u0433\u0438, \u0441\u0442\u0430\u0442\u044c\u0438, \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0442\u044c \u0438\u0445, \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438 \u0438 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438. \u0421\u0445\u0435\u043c\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Articles - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441\u043e \u0441\u0442\u0430\u0442\u044c\u044f\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Profile - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u043f\u0440\u043e\u0444\u0438\u043b\u044f\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Review - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u044f\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Books - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u043a\u043d\u0438\u0433\u0430\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Discussion - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044f\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Writer - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0430\u0432\u0442\u043e\u0440\u0430\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Message - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438 \u0432 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Likes - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u043b\u0430\u0439\u043a\u0430\u043c\u0438 \u0434\u043b\u044f \u043a\u043d\u0438\u0433\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 LikesReview - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u043b\u0430\u0439\u043a\u0430\u043c\u0438 \u0434\u043b\u044f \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0439 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Articles \u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u0442\u0430\u0442\u0435\u0439 class Articles(models.Model): HISTORY = 'HIS' LITER = 'LIT' ARTICLE_PERMISSION_CHOICES = [ (HISTORY, '\u0418\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0430\u044f'), (LITER, '\u041b\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u043d\u0430\u044f'), ] type = models.CharField( max_length=3, choices=ARTICLE_PERMISSION_CHOICES, verbose_name=\"\u0422\u0438\u043f\" ) article_title = models.TextField(verbose_name=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\") discription = models.TextField(verbose_name=\"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\") content = models.TextField(verbose_name=\"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435\") status = models.BooleanField(default=False, verbose_name=\"\u0421\u0442\u0430\u0442\u0443\u0441\") image = models.ImageField(blank=True, null=True, upload_to=generate_imageset_upload_to) user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") class Meta: verbose_name = \"\u0421\u0442\u0430\u0442\u044c\u044f\" verbose_name_plural = \"\u0421\u0442\u0430\u0442\u044c\u0438\" def __str__(self): return self.article_title \u041f\u043e\u043b\u0435 type - \u043f\u043e\u043b\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u0441\u0442\u0430\u0442\u044c\u0438. \u0421\u0442\u0430\u0442\u044c\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \"\u0418\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0435\" \u0438 \"\u041b\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u043d\u044b\u0435\". \u041f\u043e\u043b\u0435 article_title - \u043f\u043e\u043b\u0435 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u044c\u0438. \u041f\u043e\u043b\u0435 discription - \u043f\u043e\u043b\u0435 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u044c\u0438. \u041f\u043e\u043b\u0435 content - \u043f\u043e\u043b\u0435 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u044c\u0438. \u041f\u043e\u043b\u0435 status - \u043f\u043e\u043b\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u0441\u0442\u0430\u0442\u044c\u0438. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0432\u0438\u0434\u044f\u0442 \u0441\u0442\u0430\u0442\u044c\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0434\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441. \u0421\u0442\u0430\u0442\u0443\u0441 \u043c\u0435\u043d\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440. \u041f\u043e\u043b\u0435 image - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u043e\u0431\u043b\u043e\u0436\u043a\u0438 \u0441\u0442\u0430\u0442\u044c\u0438. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u043d\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0437\u0434\u0430\u043b \u044d\u0442\u0443 \u0441\u0442\u0430\u0442\u044c\u044e. \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Profile \u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044f class Profile(models.Model): ADMIN = 'ADM' CLIENT = 'CLI' USER_PERMISSION_CHOICES = [ (ADMIN, '\u0410\u0434\u043c\u0438\u043d'), (CLIENT, '\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c'), ] role = models.CharField( max_length=3, choices=USER_PERMISSION_CHOICES, default=CLIENT ) user = models.OneToOneField(User, on_delete=models.CASCADE) phone = models.TextField(max_length=12, blank=True) image = models.ImageField(blank=True, null=True, upload_to=generate_imageset_upload_to) class Meta: verbose_name = '\u041f\u0440\u043e\u0444\u0438\u043b\u044c' verbose_name_plural = '\u041f\u0440\u043e\u0444\u0438\u043b\u0438' def __str__(self): return self.user.username \u041f\u043e\u043b\u0435 role - \u043f\u043e\u043b\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \"\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\" \u0438 \"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\". \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u043d\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u0435 phone - \u043f\u043e\u043b\u0435 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430. \u041f\u043e\u043b\u0435 image - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0430\u0432\u0430\u0442\u0430\u0440\u043a\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Writer \u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f class Writer(models.Model): name = models.TextField(verbose_name=\"\u0418\u043c\u044f\") date_life = models.TextField(verbose_name=\"\u0414\u0430\u0442\u044b \u0436\u0438\u0437\u043d\u0438\") biografi = models.TextField(verbose_name=\"\u0411\u0438\u043e\u0433\u0440\u0430\u0444\u0438\u044f\") bibliografi = models.TextField(verbose_name=\"\u0411\u0438\u0431\u043b\u0438\u043e\u0433\u0440\u0430\u0444\u0438\u044f\") about_life = models.TextField(verbose_name=\"\u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u0436\u0438\u0437\u043d\u0438\") status = models.BooleanField(default=False, verbose_name=\"\u0421\u0442\u0430\u0442\u0443\u0441\") image = models.ImageField(blank=True, null=True, upload_to=generate_imageset_upload_to) class Meta: verbose_name = \"\u041f\u0438\u0441\u0430\u0442\u0435\u043b\u044c\" verbose_name_plural = \"\u041f\u0438\u0441\u0430\u0442\u0435\u043b\u0438\" def __str__(self): return self.name \u041f\u043e\u043b\u0435 name - \u043f\u043e\u043b\u0435 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u0435 date_life - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0434\u0430\u0442\u044b \u0436\u0438\u0437\u043d\u0438. \u041f\u043e\u043b\u0435 biografi - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0431\u0438\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u0435 about_life - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0436\u0438\u0437\u043d\u044c \u0430\u0432\u0442\u043e\u0440\u0430. \u041f\u043e\u043b\u0435 status - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u0435 image - \u043f\u043e\u043b\u0435 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Books \u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043a\u043d\u0438\u0433\u0438 class Books(models.Model): BOOK = 'DEF' PROSE = 'PRS' BOOK_PERMISSION_CHOICES = [ (BOOK, '\u041a\u043d\u0438\u0433\u0438'), (PROSE, '\u041f\u0440\u043e\u0437\u0430'), ] type = models.CharField( max_length=3, choices=BOOK_PERMISSION_CHOICES, verbose_name=\"\u0422\u0438\u043f\" ) author = models.ForeignKey(Writer, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") title = models.TextField(verbose_name=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\") date = models.TextField(blank=True, null=True, verbose_name=\"\u0414\u0430\u0442\u0430 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f\") discription = models.TextField(verbose_name=\"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\") anatation = models.TextField(verbose_name=\"\u0410\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f\") text = models.TextField(blank=True, null=True, verbose_name=\"\u0422\u0435\u043a\u0441\u0442\") plus_rating = models.IntegerField( verbose_name=\"\u041f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\") words = models.IntegerField(blank=True, null=True, verbose_name=\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043b\u043e\u0432\") chapters = models.IntegerField(blank=True, null=True, verbose_name=\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0433\u043b\u0430\u0432\") minus_rating = models.IntegerField( verbose_name=\"\u041e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\") status = models.BooleanField(default=False, verbose_name=\"\u0421\u0442\u0430\u0442\u0443\u0441\") image = models.ImageField(blank=True, null=True, upload_to=generate_imageset_upload_to) user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") class Meta: verbose_name = \"\u041a\u043d\u0438\u0433\u0430\" verbose_name_plural = \"\u041a\u043d\u0438\u0433\u0438\" def __str__(self): return self.title \u041f\u043e\u043b\u0435 type - \u043f\u043e\u043b\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u043a\u043d\u0438\u0433\u0438. \u0421\u0442\u0430\u0442\u044c\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \"\u041a\u043d\u0438\u0433\u0438\" \u0438 \"\u041f\u0440\u043e\u0437\u0430\". \u041f\u043e\u043b\u0435 author - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u0430\u0432\u0442\u043e\u0440\u0430 \u044d\u0442\u043e\u0439 \u043a\u043d\u0438\u0433\u0438. \u041f\u043e\u043b\u0435 title - \u043f\u043e\u043b\u0435 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u043a\u043d\u0438\u0433\u0438. \u041f\u043e\u043b\u0435 date - \u043f\u043e\u043b\u0435 \u0441 \u0434\u0430\u0442\u043e\u0439 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 discription - \u043f\u043e\u043b\u0435 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043a\u043d\u0438\u0433\u0438. \u041f\u043e\u043b\u0435 text - \u043f\u043e\u043b\u0435 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u043c \u043a\u043d\u0438\u0433\u0438. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 plus_rating - \u043f\u043e\u043b\u0435 \u0441 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c. \u041f\u043e\u043b\u0435 words - \u043f\u043e\u043b\u0435 \u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0441\u043b\u043e\u0432. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 chapters - \u043f\u043e\u043b\u0435 \u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0433\u043b\u0430\u0432. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 minus_rating - \u043f\u043e\u043b\u0435 \u0441 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c. \u041f\u043e\u043b\u0435 status - \u043f\u043e\u043b\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043a\u043d\u0438\u0433\u0438. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0432\u0438\u0434\u044f\u0442 \u043a\u043d\u0438\u0433\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0434\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441. \u0421\u0442\u0430\u0442\u0443\u0441 \u043c\u0435\u043d\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440. \u041f\u043e\u043b\u0435 image - \u043f\u043e\u043b\u0435 \u0441 \u043e\u0431\u043b\u043e\u0436\u043a\u043e\u0439 \u043a\u043d\u0438\u0433\u0438. \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0437\u0434\u0430\u043b \u043a\u043d\u0438\u0433\u0443. \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Review \u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438 class Review(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") book = models.ForeignKey(Books, on_delete=models.CASCADE, verbose_name=\"\u041a\u043d\u0438\u0433\u0430\") title = models.TextField(verbose_name=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\") discription = models.TextField(verbose_name=\"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\") minus_rating = models.IntegerField( verbose_name=\"\u041e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\") plus_rating = models.IntegerField( verbose_name=\"\u041f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\") class Meta: verbose_name = \"\u0420\u0435\u0446\u0435\u043d\u0437\u0438\u044f\" verbose_name_plural = \"\u0420\u0435\u0446\u0435\u043d\u0437\u0438\u0438\" def __str__(self): return self.title \u041f\u043e\u043b\u0435 book - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043a\u043d\u0438\u0433\u0443, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u044f. \u041f\u043e\u043b\u0435 title - \u043f\u043e\u043b\u0435 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438. \u041f\u043e\u043b\u0435 discription - \u043f\u043e\u043b\u0435 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438. \u041f\u043e\u043b\u0435 plus_rating - \u043f\u043e\u043b\u0435 \u0441 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c. \u041f\u043e\u043b\u0435 minus_rating - \u043f\u043e\u043b\u0435 \u0441 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c. \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0437\u0434\u0430\u043b \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u044e. \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Discussion \u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0439 class Discussion(models.Model): title = models.TextField(verbose_name=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\") book = models.ForeignKey(Books, on_delete=models.CASCADE, verbose_name=\"\u041a\u043d\u0438\u0433\u0430\") class Meta: verbose_name = \"\u0414\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044f\" verbose_name_plural = \"\u0414\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438\" def __str__(self): return self.title \u041f\u043e\u043b\u0435 book - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043a\u043d\u0438\u0433\u0443, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044f. \u041f\u043e\u043b\u0435 title - \u043f\u043e\u043b\u0435 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438. \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Message \u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 class Message(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") discussion = models.ForeignKey(Discussion, on_delete=models.CASCADE, verbose_name=\"\u0422\u0435\u043c\u0430 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438\") text = models.TextField(blank=True, null=True, verbose_name=\"\u0422\u0435\u043a\u0441\u0442\") class Meta: verbose_name = \"\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\" verbose_name_plural = \"\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\" def __str__(self): return self.text \u041f\u043e\u043b\u0435 discussion - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044e, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u041f\u043e\u043b\u0435 text - \u043f\u043e\u043b\u0435 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Likes \u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043b\u0430\u0439\u043a\u043e\u0432 \u043a\u043d\u0438\u0433 class Likes(models.Model): LIK = 'LIK' DIS = 'DIS' LIKES_PERMISSION_CHOICES = [ (LIK, '\u041b\u0430\u0439\u043a'), (DIS, '\u0414\u0438\u0441\u043b\u0430\u0439\u043a'), ] type = models.CharField( max_length=3, choices=LIKES_PERMISSION_CHOICES, verbose_name=\"\u0422\u0438\u043f\" ) user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") book = models.ForeignKey(Books, on_delete=models.CASCADE, verbose_name=\"\u041a\u043d\u0438\u0433\u0430\") class Meta: verbose_name = \"\u041b\u0430\u0439\u043a\" verbose_name_plural = \"\u041b\u0430\u0439\u043a\u0438\" def __str__(self): return self.type \u041f\u043e\u043b\u0435 book - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043a\u043d\u0438\u0433\u0443, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043e\u0446\u0435\u043d\u043a\u0430. \u041f\u043e\u043b\u0435 type - \u043f\u043e\u043b\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u043e\u0446\u0435\u043d\u043a\u0438. \u041e\u0446\u0435\u043d\u043a\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \"\u041b\u0430\u0439\u043a\u0438\" \u0438 \"\u0414\u0438\u0441\u043b\u0430\u0439\u043a\u0438\" \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043b \u043e\u0446\u0435\u043d\u043a\u0443. \u0422\u0430\u0431\u043b\u0438\u0446\u0430 LikesReview \u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043b\u0430\u0439\u043a\u043e\u0432 \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0439 class LikesReview(models.Model): LIK = 'LIK' DIS = 'DIS' LIKES_PERMISSION_CHOICES = [ (LIK, '\u041b\u0430\u0439\u043a'), (DIS, '\u0414\u0438\u0441\u043b\u0430\u0439\u043a'), ] type = models.CharField( max_length=3, choices=LIKES_PERMISSION_CHOICES, verbose_name=\"\u0422\u0438\u043f\" ) user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") review = models.ForeignKey(Review, on_delete=models.CASCADE, verbose_name=\"\u0421\u0442\u0430\u0442\u044c\u044f\") class Meta: verbose_name = \"\u041b\u0430\u0439\u043a \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438\" verbose_name_plural = \"\u041b\u0430\u0439\u043a\u0438 \u0440\u0435\u0446\u0438\u043d\u0437\u0438\u0439\" def __str__(self): return self.type \u041f\u043e\u043b\u0435 review - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043e\u0446\u0435\u043d\u043a\u0430. \u041f\u043e\u043b\u0435 type - \u043f\u043e\u043b\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u043e\u0446\u0435\u043d\u043a\u0438. \u041e\u0446\u0435\u043d\u043a\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \"\u041b\u0430\u0439\u043a\u0438\" \u0438 \"\u0414\u0438\u0441\u043b\u0430\u0439\u043a\u0438\" \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043b \u043e\u0446\u0435\u043d\u043a\u0443. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0410\u0434\u0440\u0435\u0441\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043d\u0438\u0436\u0435. urlpatterns = [ path('', views.index), path('accounts/', include('django.contrib.auth.urls'), {'next_page': '/'}), path('books/', views.books), path('articles/', views.articles), path('writer/<int:pk>/', views.writer.as_view()), path('read_one_review/<int:pk>/', views.read_one_review.as_view()), path('discussion/<int:pk>/', views.discussion.as_view()), path('read_book/<int:pk>/', views.read_book.as_view()), path('read_article/<int:pk>/', views.read_article.as_view()), path('admin_dev/', views.admin_dev), path('password_recovery/', views.password_recovery), path('profile/', views.profile), path('profile_edit/', views.profile_edit), path('create_author/', views.create_author), path('article_confirmation/', views.article_confirmation), path('admin_create_composition/', views.admin_create_composition), path('confirmation_works/', views.confirmation_works), path('creat_composition/', views.creat_composition), path('create_article/', views.create_article), path('create_discussion/', views.create_discussion), path('create_rewies/', views.create_rewies), path('read_one_book/<int:pk>/', views.read_one_book.as_view()), ] \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 '/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 '/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f index. def index(request): article = Articles.objects.all() books = Books.objects.all() context = {'article':article, 'books':books} if request.method == 'POST': data = request.POST if data.get(\"register\"): user = User.objects.create_user(data.get('login'), data.get('email'), data.get('password')) # user.profile.phone = data.get('phone') user.save() if data.get(\"enter\"): print(data) user = authenticate(request, username=data.get('login'), password=data.get('password')) if user is not None: login(request, user) else: # context = {'error': \"\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432\u0445\u043e\u0434\u0430. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.\"} print(\"\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432\u0445\u043e\u0434\u0430. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.\") # return render(request, 'main/index.html', context) if data.get(\"search\"): books = Books.objects.filter(title = data.get('search')) article = Articles.objects.filter(article_title = data.get('search')) context['books'] = books context['article'] = article print(data) return render(request, 'main/index.html', context) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(index.html) \u043a\u043d\u0438\u0433\u0438(Books) \u0438 \u0441\u0442\u0430\u0442\u044c\u0438(Articles). \u0422\u0430\u043a\u0436\u0435 \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'accounts/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'accounts/' \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0448\u0430\u043f\u043a\u0430 \u0441\u0430\u0439\u0442\u0430 \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'books/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'books/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043a\u043d\u0438\u0433\u0430\u043c\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f books. def books(request): books = Books.objects.all() context = {'books':books} if request.method == 'POST': data = request.POST if data.get('rating'): books = Books.objects.order_by('-plus_rating') context['books'] = books print(data) if data.get('name'): books = Books.objects.order_by('title') context['books'] = books print(data) if data.get('search_book'): books = Books.objects.filter(title = data.get('search_book')) context['books'] = books print(data.get('search_book')) return render(request, 'main/books.html', context) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(books.html) \u043a\u043d\u0438\u0433\u0438(Books). \u0422\u0430\u043a\u0436\u0435 \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'articles/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'articles/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e \u0441\u0442\u0430\u0442\u044c\u044f\u043c\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f articles. def articles(request): article = Articles.objects.all() context = {'article':article} if request.method == 'POST': data = request.POST if data.get('name'): article = Articles.objects.order_by('article_title') context['article'] = article print(data) if data.get('search_article'): article = Articles.objects.filter(article_title = data.get('search_article')) context['article'] = article print(data.get('search_article')) return render(request, 'main/articles.html', context) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(articles.html) \u0441\u0442\u0430\u0442\u044c\u0438(Articles). \u0422\u0430\u043a\u0436\u0435 \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'writer/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'writer/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0430\u0432\u0442\u043e\u0440\u043e\u043c. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 writer. class writer(View): template_name = 'main/writer.html' def get(self, request, *args, **kwargs): writer = get_object_or_404(Writer, pk=kwargs['pk']) rewies = Review.objects.all() discussion = Discussion.objects.all() data = {'writer':writer} return render(request, self.template_name, context=data) \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(writer.html) \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u0435\u0439(Writer). \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u0435\u0439 \u0447\u0435\u0440\u0435\u0437 \u0438\u0445 PrimaryKey. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'read_one_review/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'read_one_review/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0440\u0438\u0446\u0435\u043d\u0437\u0438\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 read_one_review. class read_one_review(View): template_name = 'main/read_one_review.html' def get(self, request, *args, **kwargs): review = get_object_or_404(Review, pk=kwargs['pk']) likes = LikesReview.objects.all() context = {'review': review, 'likes': likes} return render(request, self.template_name, context) def post(self, request, *args, **kwargs): review = get_object_or_404(Review, pk=kwargs['pk']) likes = LikesReview.objects.all() context = {'review':review, 'likes': likes} data = request.POST print(data) if request.POST.get('like'): like = LikesReview.objects.get(id=data.get('like')) like.type = 'LIK' like.save() review = Review.objects.get(id=data.get('like_input')) review.plus_rating += 1 review.minus_rating -= 1 review.save() if request.POST.get('like2'): like = LikesReview() like.type = 'LIK' like.user = User.objects.get(id=request.user.id) like.review = Review.objects.get(id=data.get('like2')) like.save() review = Review.objects.get(id=data.get('like2')) review.plus_rating += 1 review.save() if request.POST.get('dislike'): like = LikesReview.objects.get(id=data.get('dislike')) like.type = 'DIS' like.save() review = Review.objects.get(id=data.get('dislike_input')) review.plus_rating -= 1 review.minus_rating += 1 review.save() if request.POST.get('dislike2'): like = LikesReview() like.type = 'DIS' like.user = User.objects.get(id=request.user.id) like.review = Books.objects.get(id=data.get('dislike2')) like.save() review = Review.objects.get(id=data.get('dislike2')) review.minus_rating += 1 review.save() return render(request, self.template_name, context) \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(read_one_review.html) \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438(Review) \u0438 \u043b\u0430\u0439\u043a\u0438(LikesReview). \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0440\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 \u0438\u0445 PrimaryKey \u0438 \u0440\u0435\u0430\u0437\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u043d\u0438\u044f. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'discussion/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'discussion/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0435\u0439. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 discussion. class discussion(View): template_name = 'main/discussion.html' def get(self, request, *args, **kwargs): discussion = get_object_or_404(Discussion, pk=kwargs['pk']) messages = Message.objects.all() paginator = Paginator(messages, 2) page = self.request.GET.get('page') try: messages = paginator.page(page) except PageNotAnInteger: # \u0415\u0441\u043b\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0446\u0435\u043b\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c, \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 messages = paginator.page(1) except EmptyPage: # \u0415\u0441\u043b\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439, \u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 messages = paginator.page(paginator.num_pages) context = {'discussion': discussion, 'message':messages} return render(request, self.template_name, context) def post(self, request, *args, **kwargs): discussion = get_object_or_404(Discussion, pk=kwargs['pk']) messages = Message.objects.all() paginator = Paginator(messages, 2) page = self.request.GET.get('page') try: messages = paginator.page(page) except PageNotAnInteger: messages = paginator.page(1) except EmptyPage: messages = paginator.page(paginator.num_pages) data = request.POST print(data) message = Message() message.user = User.objects.get(id=request.user.id) message.discussion = discussion message.text = data.get('text') message.save() context = {'discussion': discussion, 'message':messages} return render(request, self.template_name, context) \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(discussion.html) \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438(Discussion) \u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f(Message). \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 \u0438\u0445 PrimaryKey, \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u043a \u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438 \u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'read_book/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'read_book/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u043a\u043d\u0438\u0433\u043e\u0439. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 read_book. class read_book(View): template_name = 'main/read_book.html' def get(self, request, *args, **kwargs): books = get_object_or_404(Books, pk=kwargs['pk']) rewies = Review.objects.all() discussion = Discussion.objects.all() likes = Likes.objects.all() data = {'books':books, 'rewies':rewies, 'discussion': discussion, 'likes': likes} return render(request, self.template_name, context=data) def post(self, request, *args, **kwargs): books = get_object_or_404(Books, pk=kwargs['pk']) rewies = Review.objects.all() discussion = Discussion.objects.all() likes = Likes.objects.all() context = {'books':books, 'rewies':rewies, 'discussion': discussion, 'likes': likes} data = request.POST print(data) if request.POST.get('like'): like = Likes.objects.get(id=data.get('like')) like.type = 'LIK' like.save() book = Books.objects.get(id=data.get('like_input')) book.plus_rating += 1 book.minus_rating -= 1 book.save() if request.POST.get('like2'): like = Likes() like.type = 'LIK' like.user = User.objects.get(id=request.user.id) like.book = Books.objects.get(id=data.get('like2')) like.save() book = Books.objects.get(id=data.get('like2')) book.plus_rating += 1 book.save() if request.POST.get('dislike'): like = Likes.objects.get(id=data.get('dislike')) like.type = 'DIS' like.save() book = Books.objects.get(id=data.get('dislike_input')) book.plus_rating -= 1 book.minus_rating += 1 book.save() if request.POST.get('dislike2'): like = Likes() like.type = 'DIS' like.user = User.objects.get(id=request.user.id) like.book = Books.objects.get(id=data.get('dislike2')) like.save() book = Books.objects.get(id=data.get('dislike2')) book.minus_rating += 1 book.save() return render(request, self.template_name, context) \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(read_book.html) \u043a\u043d\u0438\u0433\u0443(Books), \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438(Discussion), \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438(Review) \u0438 \u043b\u0430\u0439\u043a\u0438(Likes). \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u043a\u043d\u0438\u0433\u0438 \u0447\u0435\u0440\u0435\u0437 \u0438\u0445 PrimaryKey, \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438, \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438 \u0438 \u043b\u0430\u0439\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u043a \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043d\u0438\u0433\u0435. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'read_article/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'read_article/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0430\u0442\u044c\u0435\u0439. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 read_article. class read_article(View): template_name = 'main/read_article.html' def get(self, request, *args, **kwargs): article = get_object_or_404(Articles, pk=kwargs['pk']) context = {'article': article} return render(request, self.template_name, context) \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(read_article.html) \u0441\u0442\u0430\u0442\u044c\u044e(Articles). \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u044c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0438\u0445 PrimaryKey. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'admin_dev/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'admin_dev/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u044c\u044e. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f admin_dev. def admin_dev(request): return render(request, 'main/admin_panel.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(admin_panel.html). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'password_recovery/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'password_recovery/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u044f. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f password_recovery. def password_recovery(request): return render(request, 'main/password_recovery.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(password_recovery.html). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'profile/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'profile/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043b\u0438\u0447\u043d\u044b\u043c \u043f\u0440\u043e\u0444\u0438\u043b\u0435\u043c. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f profile. def profile(request): books = Books.objects.all() article = Articles.objects.all() review = Review.objects.all() likes = Likes.objects.all() data = {'article':article, 'books':books, 'review':review, 'likes':likes} return render(request, 'main/personal_account.html', context=data) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(personal_account.html) \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0442\u0443\u0434\u0430 \u0441\u0442\u0430\u0442\u0438\u0438(Articles), \u043a\u043d\u0438\u0433\u0438(Books), \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438(Review), \u043b\u0430\u0439\u043a\u0438(Likes). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'profile_edit/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'profile_edit/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0444\u0438\u043b\u044f. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f profile_edit. def profile_edit(request): if request.method == 'POST': data = request.POST print(data) user = User.objects.get(id=request.user.id) user.username = data.get('login') user.first_name = data.get('name') user.last_name = data.get('surname') user.email = data.get('email') user.profile.image = request.FILES.get('image') user.save() if data.get('old_pass') != \"\": old_password = request.POST.get(\"old_pass\") new_pass = request.POST.get(\"new_pass\") if check_password(old_password, user.password): user.set_password(new_pass) update_session_auth_hash(request, user) user.save() return render(request, 'main/profile.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(profile.html). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'create_author/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'create_author/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u0440\u0430. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f create_author. def create_author(request): if request.method == 'POST': data = request.POST print(data) author = Writer.objects.create() author.name = data.get('name') author.date_life = data.get('date_life') author.biografi = data.get('biografi') author.bibliografi = data.get('bibliografi') author.about_life = data.get('about_life') author.image = request.FILES.get('image') author.save() return render(request, 'main/create_author.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(create_author.html). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'article_confirmation/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'article_confirmation/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u044c\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f article_confirmation. def article_confirmation(request): articles = Articles.objects.all() if request.method == 'POST': if request.POST.get('disline'): article_id = request.POST.get('disline') article = Articles.objects.get(id=article_id) article.delete() if request.POST.get('accept'): article_id = request.POST.get('accept') article = Articles.objects.get(id=article_id) article.status = True article.save() data = {'articles':articles} return render(request, 'main/article_confirmation.html', context=data) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(article_confirmation.html). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'admin_create_composition/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'admin_create_composition/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0443 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f admin_create_composition. def admin_create_composition(request): writer = Writer.objects.all() if request.method == 'POST': data = request.POST print(data) author_id = request.POST.get('author_id') book = Books() book.type = \"DEF\" book.author = Writer.objects.get(id=author_id) book.title = data.get('name') book.date = data.get('date') book.discription = data.get('discription') book.anatation = data.get('anatation') book.plus_rating = 0 book.minus_rating = 0 book.status = True book.image = request.FILES.get('image') book.user = User.objects.get(id=request.user.id) book.save() return render(request, 'main/admin_create_composition.html', {'writer':writer}) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(admin_create_composition.html) \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0442\u0443\u0434\u0430 \u0430\u0432\u0442\u043e\u0440\u043e\u0432(Writer). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'confirmation_works/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'confirmation_works/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f confirmation_works. def confirmation_works(request): books = Books.objects.all() if request.method == 'POST': if request.POST.get('disline'): book_id = request.POST.get('disline') book = Books.objects.get(id=book_id) book.delete() if request.POST.get('accept'): book_id = request.POST.get('accept') book = Books.objects.get(id=book_id) book.status = True book.save() data = {'books':books} return render(request, 'main/confirmation_works.html', context=data) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(confirmation_works.html) \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0442\u0443\u0434\u0430 \u043a\u043d\u0438\u0433\u0438(Books). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'creat_composition/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'creat_composition/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f creat_composition. def creat_composition(request): if request.method == 'POST': data = request.POST print(data) book = Books() book.type = \"PRS\" book.author = Writer.objects.get(id=1) book.title = data.get('title') book.discription = data.get('discription') book.anatation = data.get('anatation') book.text = data.get('text') book.plus_rating = 0 book.minus_rating = 0 book.words = data.get('words') book.chapters = data.get('chapters') book.status = False book.image = request.FILES.get('image') book.user = User.objects.get(id=request.user.id) book.save() return render(request, 'main/creat_composition.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(creat_composition.html). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'create_article/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'create_article/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u044c\u0438 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f create_article. def create_article(request): if request.method == 'POST': data = request.POST print(data) article = Articles() article.article_title = data.get('title') article.discription = data.get('discription') article.content = data.get('content') article.status = False article.image = request.FILES.get('image') article.type = data.get('type') article.user = User.objects.get(id=request.user.id) article.save() return render(request, 'main/create_article.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(create_article.html). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'create_discussion/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'create_discussion/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f create_discussion. def create_discussion(request): if request.method == 'POST': data = request.POST print(data) book_id = request.POST.get('book_id') discussion = Discussion() discussion.title = data.get('title') discussion.book = Books.objects.get(id=book_id) discussion.save() last_discussion = Discussion.objects.last() message = Message() message.user = User.objects.get(id=request.user.id) message.discussion = Discussion.objects.get(id=last_discussion.id) message.text = data.get('text') message.save() return render(request, 'main/create_discussion.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(create_discussion.html). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'create_rewies/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'create_rewies/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f create_rewies. def create_rewies(request): if request.method == 'POST': data = request.POST print(data) book_id = request.POST.get('book_id') review = Review() review.user = User.objects.get(id=request.user.id) review.book = Books.objects.get(id=book_id) review.title = data.get('title') review.discription = data.get('text') review.minus_rating = 0 review.plus_rating = 0 review.save() return render(request, 'main/create_review.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(create_review.html). \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'read_one_book/' \u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'read_one_book/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0447\u0442\u0435\u043d\u0438\u044f \u043a\u043d\u0438\u0433\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 read_one_book. class read_one_book(View): template_name = 'main/read_one_book.html' def get(self, request, *args, **kwargs): books = get_object_or_404(Books, pk=kwargs['pk']) likes = Likes.objects.all() context = {'books': books, 'likes': likes} return render(request, self.template_name, context) def post(self, request, *args, **kwargs): books = get_object_or_404(Books, pk=kwargs['pk']) rewies = Review.objects.all() discussion = Discussion.objects.all() likes = Likes.objects.all() context = {'books':books, 'likes': likes} data = request.POST print(data) if request.POST.get('like'): like = Likes.objects.get(id=data.get('like')) like.type = 'LIK' like.save() book = Books.objects.get(id=data.get('like_input')) book.plus_rating += 1 book.minus_rating -= 1 book.save() if request.POST.get('like2'): like = Likes() like.type = 'LIK' like.user = User.objects.get(id=request.user.id) like.book = Books.objects.get(id=data.get('like2')) like.save() book = Books.objects.get(id=data.get('like2')) book.plus_rating += 1 book.save() if request.POST.get('dislike'): like = Likes.objects.get(id=data.get('dislike')) like.type = 'DIS' like.save() book = Books.objects.get(id=data.get('dislike_input')) book.plus_rating -= 1 book.minus_rating += 1 book.save() if request.POST.get('dislike2'): like = Likes() like.type = 'DIS' like.user = User.objects.get(id=request.user.id) like.book = Books.objects.get(id=data.get('dislike2')) like.save() book = Books.objects.get(id=data.get('dislike2')) book.minus_rating += 1 book.save() return render(request, self.template_name, context) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(read_one_book.html) \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0442\u0443\u0434\u0430 \u043a\u043d\u0438\u0433\u0438(Books) \u0438 \u043b\u0430\u0439\u043a\u0438(Likes).","title":"\u041f\u0440\u043e\u0435\u043a\u0442 \u043f\u043e \u0443\u0447\u0435\u0431\u043d\u043e\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435 11.01"},{"location":"#1101","text":"","title":"\u041f\u0440\u043e\u0435\u043a\u0442 \u043f\u043e \u0443\u0447\u0435\u0431\u043d\u043e\u0439 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435 11.01"},{"location":"#_1","text":"\u0421\u0435\u0440\u0432\u0438\u0441, \u0433\u0434\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0432\u044b\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0442\u044c \u043a\u043d\u0438\u0433\u0438, \u0441\u0442\u0430\u0442\u044c\u0438, \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0442\u044c \u0438\u0445, \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438 \u0438 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438.","title":"\u041e\u0431\u0449\u0435\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430"},{"location":"#_2","text":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 Articles - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441\u043e \u0441\u0442\u0430\u0442\u044c\u044f\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Profile - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u043f\u0440\u043e\u0444\u0438\u043b\u044f\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Review - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u044f\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Books - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u043a\u043d\u0438\u0433\u0430\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Discussion - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044f\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Writer - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0430\u0432\u0442\u043e\u0440\u0430\u043c\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Message - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438 \u0432 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 Likes - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u043b\u0430\u0439\u043a\u0430\u043c\u0438 \u0434\u043b\u044f \u043a\u043d\u0438\u0433\u0438 \u0422\u0430\u0431\u043b\u0438\u0446\u0430 LikesReview - \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u043b\u0430\u0439\u043a\u0430\u043c\u0438 \u0434\u043b\u044f \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0439","title":"\u0421\u0445\u0435\u043c\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"#_3","text":"","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b"},{"location":"#articles","text":"\u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u0442\u0430\u0442\u0435\u0439 class Articles(models.Model): HISTORY = 'HIS' LITER = 'LIT' ARTICLE_PERMISSION_CHOICES = [ (HISTORY, '\u0418\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0430\u044f'), (LITER, '\u041b\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u043d\u0430\u044f'), ] type = models.CharField( max_length=3, choices=ARTICLE_PERMISSION_CHOICES, verbose_name=\"\u0422\u0438\u043f\" ) article_title = models.TextField(verbose_name=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\") discription = models.TextField(verbose_name=\"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\") content = models.TextField(verbose_name=\"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435\") status = models.BooleanField(default=False, verbose_name=\"\u0421\u0442\u0430\u0442\u0443\u0441\") image = models.ImageField(blank=True, null=True, upload_to=generate_imageset_upload_to) user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") class Meta: verbose_name = \"\u0421\u0442\u0430\u0442\u044c\u044f\" verbose_name_plural = \"\u0421\u0442\u0430\u0442\u044c\u0438\" def __str__(self): return self.article_title \u041f\u043e\u043b\u0435 type - \u043f\u043e\u043b\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u0441\u0442\u0430\u0442\u044c\u0438. \u0421\u0442\u0430\u0442\u044c\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \"\u0418\u0441\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0435\" \u0438 \"\u041b\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u043d\u044b\u0435\". \u041f\u043e\u043b\u0435 article_title - \u043f\u043e\u043b\u0435 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u044c\u0438. \u041f\u043e\u043b\u0435 discription - \u043f\u043e\u043b\u0435 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u044c\u0438. \u041f\u043e\u043b\u0435 content - \u043f\u043e\u043b\u0435 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u044c\u0438. \u041f\u043e\u043b\u0435 status - \u043f\u043e\u043b\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u0441\u0442\u0430\u0442\u044c\u0438. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0432\u0438\u0434\u044f\u0442 \u0441\u0442\u0430\u0442\u044c\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0434\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441. \u0421\u0442\u0430\u0442\u0443\u0441 \u043c\u0435\u043d\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440. \u041f\u043e\u043b\u0435 image - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u043e\u0431\u043b\u043e\u0436\u043a\u0438 \u0441\u0442\u0430\u0442\u044c\u0438. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u043d\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0437\u0434\u0430\u043b \u044d\u0442\u0443 \u0441\u0442\u0430\u0442\u044c\u044e.","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 Articles"},{"location":"#profile","text":"\u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044f class Profile(models.Model): ADMIN = 'ADM' CLIENT = 'CLI' USER_PERMISSION_CHOICES = [ (ADMIN, '\u0410\u0434\u043c\u0438\u043d'), (CLIENT, '\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c'), ] role = models.CharField( max_length=3, choices=USER_PERMISSION_CHOICES, default=CLIENT ) user = models.OneToOneField(User, on_delete=models.CASCADE) phone = models.TextField(max_length=12, blank=True) image = models.ImageField(blank=True, null=True, upload_to=generate_imageset_upload_to) class Meta: verbose_name = '\u041f\u0440\u043e\u0444\u0438\u043b\u044c' verbose_name_plural = '\u041f\u0440\u043e\u0444\u0438\u043b\u0438' def __str__(self): return self.user.username \u041f\u043e\u043b\u0435 role - \u043f\u043e\u043b\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \"\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\" \u0438 \"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\". \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u043d\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u0435 phone - \u043f\u043e\u043b\u0435 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430. \u041f\u043e\u043b\u0435 image - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0430\u0432\u0430\u0442\u0430\u0440\u043a\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 Profile"},{"location":"#writer","text":"\u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f class Writer(models.Model): name = models.TextField(verbose_name=\"\u0418\u043c\u044f\") date_life = models.TextField(verbose_name=\"\u0414\u0430\u0442\u044b \u0436\u0438\u0437\u043d\u0438\") biografi = models.TextField(verbose_name=\"\u0411\u0438\u043e\u0433\u0440\u0430\u0444\u0438\u044f\") bibliografi = models.TextField(verbose_name=\"\u0411\u0438\u0431\u043b\u0438\u043e\u0433\u0440\u0430\u0444\u0438\u044f\") about_life = models.TextField(verbose_name=\"\u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u0436\u0438\u0437\u043d\u0438\") status = models.BooleanField(default=False, verbose_name=\"\u0421\u0442\u0430\u0442\u0443\u0441\") image = models.ImageField(blank=True, null=True, upload_to=generate_imageset_upload_to) class Meta: verbose_name = \"\u041f\u0438\u0441\u0430\u0442\u0435\u043b\u044c\" verbose_name_plural = \"\u041f\u0438\u0441\u0430\u0442\u0435\u043b\u0438\" def __str__(self): return self.name \u041f\u043e\u043b\u0435 name - \u043f\u043e\u043b\u0435 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u0435 date_life - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0434\u0430\u0442\u044b \u0436\u0438\u0437\u043d\u0438. \u041f\u043e\u043b\u0435 biografi - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0431\u0438\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u0435 about_life - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0436\u0438\u0437\u043d\u044c \u0430\u0432\u0442\u043e\u0440\u0430. \u041f\u043e\u043b\u0435 status - \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u0435 image - \u043f\u043e\u043b\u0435 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044f. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 Writer"},{"location":"#books","text":"\u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043a\u043d\u0438\u0433\u0438 class Books(models.Model): BOOK = 'DEF' PROSE = 'PRS' BOOK_PERMISSION_CHOICES = [ (BOOK, '\u041a\u043d\u0438\u0433\u0438'), (PROSE, '\u041f\u0440\u043e\u0437\u0430'), ] type = models.CharField( max_length=3, choices=BOOK_PERMISSION_CHOICES, verbose_name=\"\u0422\u0438\u043f\" ) author = models.ForeignKey(Writer, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") title = models.TextField(verbose_name=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\") date = models.TextField(blank=True, null=True, verbose_name=\"\u0414\u0430\u0442\u0430 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f\") discription = models.TextField(verbose_name=\"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\") anatation = models.TextField(verbose_name=\"\u0410\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f\") text = models.TextField(blank=True, null=True, verbose_name=\"\u0422\u0435\u043a\u0441\u0442\") plus_rating = models.IntegerField( verbose_name=\"\u041f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\") words = models.IntegerField(blank=True, null=True, verbose_name=\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043b\u043e\u0432\") chapters = models.IntegerField(blank=True, null=True, verbose_name=\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0433\u043b\u0430\u0432\") minus_rating = models.IntegerField( verbose_name=\"\u041e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\") status = models.BooleanField(default=False, verbose_name=\"\u0421\u0442\u0430\u0442\u0443\u0441\") image = models.ImageField(blank=True, null=True, upload_to=generate_imageset_upload_to) user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") class Meta: verbose_name = \"\u041a\u043d\u0438\u0433\u0430\" verbose_name_plural = \"\u041a\u043d\u0438\u0433\u0438\" def __str__(self): return self.title \u041f\u043e\u043b\u0435 type - \u043f\u043e\u043b\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u043a\u043d\u0438\u0433\u0438. \u0421\u0442\u0430\u0442\u044c\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \"\u041a\u043d\u0438\u0433\u0438\" \u0438 \"\u041f\u0440\u043e\u0437\u0430\". \u041f\u043e\u043b\u0435 author - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u0430\u0432\u0442\u043e\u0440\u0430 \u044d\u0442\u043e\u0439 \u043a\u043d\u0438\u0433\u0438. \u041f\u043e\u043b\u0435 title - \u043f\u043e\u043b\u0435 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u043a\u043d\u0438\u0433\u0438. \u041f\u043e\u043b\u0435 date - \u043f\u043e\u043b\u0435 \u0441 \u0434\u0430\u0442\u043e\u0439 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 discription - \u043f\u043e\u043b\u0435 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043a\u043d\u0438\u0433\u0438. \u041f\u043e\u043b\u0435 text - \u043f\u043e\u043b\u0435 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u043c \u043a\u043d\u0438\u0433\u0438. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 plus_rating - \u043f\u043e\u043b\u0435 \u0441 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c. \u041f\u043e\u043b\u0435 words - \u043f\u043e\u043b\u0435 \u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0441\u043b\u043e\u0432. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 chapters - \u043f\u043e\u043b\u0435 \u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0433\u043b\u0430\u0432. \u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 minus_rating - \u043f\u043e\u043b\u0435 \u0441 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c. \u041f\u043e\u043b\u0435 status - \u043f\u043e\u043b\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043a\u043d\u0438\u0433\u0438. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0432\u0438\u0434\u044f\u0442 \u043a\u043d\u0438\u0433\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0434\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u044b\u0439 \u0441\u0442\u0430\u0442\u0443\u0441. \u0421\u0442\u0430\u0442\u0443\u0441 \u043c\u0435\u043d\u044f\u0435\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440. \u041f\u043e\u043b\u0435 image - \u043f\u043e\u043b\u0435 \u0441 \u043e\u0431\u043b\u043e\u0436\u043a\u043e\u0439 \u043a\u043d\u0438\u0433\u0438. \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0437\u0434\u0430\u043b \u043a\u043d\u0438\u0433\u0443.","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 Books"},{"location":"#review","text":"\u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438 class Review(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") book = models.ForeignKey(Books, on_delete=models.CASCADE, verbose_name=\"\u041a\u043d\u0438\u0433\u0430\") title = models.TextField(verbose_name=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\") discription = models.TextField(verbose_name=\"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\") minus_rating = models.IntegerField( verbose_name=\"\u041e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\") plus_rating = models.IntegerField( verbose_name=\"\u041f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\") class Meta: verbose_name = \"\u0420\u0435\u0446\u0435\u043d\u0437\u0438\u044f\" verbose_name_plural = \"\u0420\u0435\u0446\u0435\u043d\u0437\u0438\u0438\" def __str__(self): return self.title \u041f\u043e\u043b\u0435 book - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043a\u043d\u0438\u0433\u0443, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u044f. \u041f\u043e\u043b\u0435 title - \u043f\u043e\u043b\u0435 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438. \u041f\u043e\u043b\u0435 discription - \u043f\u043e\u043b\u0435 \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438. \u041f\u043e\u043b\u0435 plus_rating - \u043f\u043e\u043b\u0435 \u0441 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c. \u041f\u043e\u043b\u0435 minus_rating - \u043f\u043e\u043b\u0435 \u0441 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u043c. \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0437\u0434\u0430\u043b \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u044e.","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 Review"},{"location":"#discussion","text":"\u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0439 class Discussion(models.Model): title = models.TextField(verbose_name=\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\") book = models.ForeignKey(Books, on_delete=models.CASCADE, verbose_name=\"\u041a\u043d\u0438\u0433\u0430\") class Meta: verbose_name = \"\u0414\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044f\" verbose_name_plural = \"\u0414\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438\" def __str__(self): return self.title \u041f\u043e\u043b\u0435 book - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043a\u043d\u0438\u0433\u0443, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044f. \u041f\u043e\u043b\u0435 title - \u043f\u043e\u043b\u0435 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438.","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 Discussion"},{"location":"#message","text":"\u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 class Message(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") discussion = models.ForeignKey(Discussion, on_delete=models.CASCADE, verbose_name=\"\u0422\u0435\u043c\u0430 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438\") text = models.TextField(blank=True, null=True, verbose_name=\"\u0422\u0435\u043a\u0441\u0442\") class Meta: verbose_name = \"\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\" verbose_name_plural = \"\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\" def __str__(self): return self.text \u041f\u043e\u043b\u0435 discussion - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044e, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u041f\u043e\u043b\u0435 text - \u043f\u043e\u043b\u0435 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435.","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 Message"},{"location":"#likes","text":"\u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043b\u0430\u0439\u043a\u043e\u0432 \u043a\u043d\u0438\u0433 class Likes(models.Model): LIK = 'LIK' DIS = 'DIS' LIKES_PERMISSION_CHOICES = [ (LIK, '\u041b\u0430\u0439\u043a'), (DIS, '\u0414\u0438\u0441\u043b\u0430\u0439\u043a'), ] type = models.CharField( max_length=3, choices=LIKES_PERMISSION_CHOICES, verbose_name=\"\u0422\u0438\u043f\" ) user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") book = models.ForeignKey(Books, on_delete=models.CASCADE, verbose_name=\"\u041a\u043d\u0438\u0433\u0430\") class Meta: verbose_name = \"\u041b\u0430\u0439\u043a\" verbose_name_plural = \"\u041b\u0430\u0439\u043a\u0438\" def __str__(self): return self.type \u041f\u043e\u043b\u0435 book - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043a\u043d\u0438\u0433\u0443, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043e\u0446\u0435\u043d\u043a\u0430. \u041f\u043e\u043b\u0435 type - \u043f\u043e\u043b\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u043e\u0446\u0435\u043d\u043a\u0438. \u041e\u0446\u0435\u043d\u043a\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \"\u041b\u0430\u0439\u043a\u0438\" \u0438 \"\u0414\u0438\u0441\u043b\u0430\u0439\u043a\u0438\" \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043b \u043e\u0446\u0435\u043d\u043a\u0443.","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 Likes"},{"location":"#likesreview","text":"\u042d\u0442\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u043b\u0430\u0439\u043a\u043e\u0432 \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0439 class LikesReview(models.Model): LIK = 'LIK' DIS = 'DIS' LIKES_PERMISSION_CHOICES = [ (LIK, '\u041b\u0430\u0439\u043a'), (DIS, '\u0414\u0438\u0441\u043b\u0430\u0439\u043a'), ] type = models.CharField( max_length=3, choices=LIKES_PERMISSION_CHOICES, verbose_name=\"\u0422\u0438\u043f\" ) user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name=\"\u0421\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c\") review = models.ForeignKey(Review, on_delete=models.CASCADE, verbose_name=\"\u0421\u0442\u0430\u0442\u044c\u044f\") class Meta: verbose_name = \"\u041b\u0430\u0439\u043a \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438\" verbose_name_plural = \"\u041b\u0430\u0439\u043a\u0438 \u0440\u0435\u0446\u0438\u043d\u0437\u0438\u0439\" def __str__(self): return self.type \u041f\u043e\u043b\u0435 review - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043e\u0446\u0435\u043d\u043a\u0430. \u041f\u043e\u043b\u0435 type - \u043f\u043e\u043b\u0435 \u0441 \u0442\u0438\u043f\u043e\u043c \u043e\u0446\u0435\u043d\u043a\u0438. \u041e\u0446\u0435\u043d\u043a\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \"\u041b\u0430\u0439\u043a\u0438\" \u0438 \"\u0414\u0438\u0441\u043b\u0430\u0439\u043a\u0438\" \u041f\u043e\u043b\u0435 user - \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0430\u0434\u0440\u0435\u0441\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043b \u043e\u0446\u0435\u043d\u043a\u0443.","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 LikesReview"},{"location":"#_4","text":"\u0410\u0434\u0440\u0435\u0441\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043d\u0438\u0436\u0435. urlpatterns = [ path('', views.index), path('accounts/', include('django.contrib.auth.urls'), {'next_page': '/'}), path('books/', views.books), path('articles/', views.articles), path('writer/<int:pk>/', views.writer.as_view()), path('read_one_review/<int:pk>/', views.read_one_review.as_view()), path('discussion/<int:pk>/', views.discussion.as_view()), path('read_book/<int:pk>/', views.read_book.as_view()), path('read_article/<int:pk>/', views.read_article.as_view()), path('admin_dev/', views.admin_dev), path('password_recovery/', views.password_recovery), path('profile/', views.profile), path('profile_edit/', views.profile_edit), path('create_author/', views.create_author), path('article_confirmation/', views.article_confirmation), path('admin_create_composition/', views.admin_create_composition), path('confirmation_works/', views.confirmation_works), path('creat_composition/', views.creat_composition), path('create_article/', views.create_article), path('create_discussion/', views.create_discussion), path('create_rewies/', views.create_rewies), path('read_one_book/<int:pk>/', views.read_one_book.as_view()), ]","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446"},{"location":"#_5","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 '/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f index. def index(request): article = Articles.objects.all() books = Books.objects.all() context = {'article':article, 'books':books} if request.method == 'POST': data = request.POST if data.get(\"register\"): user = User.objects.create_user(data.get('login'), data.get('email'), data.get('password')) # user.profile.phone = data.get('phone') user.save() if data.get(\"enter\"): print(data) user = authenticate(request, username=data.get('login'), password=data.get('password')) if user is not None: login(request, user) else: # context = {'error': \"\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432\u0445\u043e\u0434\u0430. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.\"} print(\"\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432\u0445\u043e\u0434\u0430. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.\") # return render(request, 'main/index.html', context) if data.get(\"search\"): books = Books.objects.filter(title = data.get('search')) article = Articles.objects.filter(article_title = data.get('search')) context['books'] = books context['article'] = article print(data) return render(request, 'main/index.html', context) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(index.html) \u043a\u043d\u0438\u0433\u0438(Books) \u0438 \u0441\u0442\u0430\u0442\u044c\u0438(Articles). \u0422\u0430\u043a\u0436\u0435 \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438.","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 '/'"},{"location":"#accounts","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'accounts/' \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0448\u0430\u043f\u043a\u0430 \u0441\u0430\u0439\u0442\u0430 \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d.","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'accounts/'"},{"location":"#books_1","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'books/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043a\u043d\u0438\u0433\u0430\u043c\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f books. def books(request): books = Books.objects.all() context = {'books':books} if request.method == 'POST': data = request.POST if data.get('rating'): books = Books.objects.order_by('-plus_rating') context['books'] = books print(data) if data.get('name'): books = Books.objects.order_by('title') context['books'] = books print(data) if data.get('search_book'): books = Books.objects.filter(title = data.get('search_book')) context['books'] = books print(data.get('search_book')) return render(request, 'main/books.html', context) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(books.html) \u043a\u043d\u0438\u0433\u0438(Books). \u0422\u0430\u043a\u0436\u0435 \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430.","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'books/'"},{"location":"#articles_1","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'articles/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e \u0441\u0442\u0430\u0442\u044c\u044f\u043c\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f articles. def articles(request): article = Articles.objects.all() context = {'article':article} if request.method == 'POST': data = request.POST if data.get('name'): article = Articles.objects.order_by('article_title') context['article'] = article print(data) if data.get('search_article'): article = Articles.objects.filter(article_title = data.get('search_article')) context['article'] = article print(data.get('search_article')) return render(request, 'main/articles.html', context) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(articles.html) \u0441\u0442\u0430\u0442\u044c\u0438(Articles). \u0422\u0430\u043a\u0436\u0435 \u044d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430.","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'articles/'"},{"location":"#writer_1","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'writer/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0430\u0432\u0442\u043e\u0440\u043e\u043c. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 writer. class writer(View): template_name = 'main/writer.html' def get(self, request, *args, **kwargs): writer = get_object_or_404(Writer, pk=kwargs['pk']) rewies = Review.objects.all() discussion = Discussion.objects.all() data = {'writer':writer} return render(request, self.template_name, context=data) \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(writer.html) \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u0435\u0439(Writer). \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u043f\u0438\u0441\u0430\u0442\u0435\u043b\u0435\u0439 \u0447\u0435\u0440\u0435\u0437 \u0438\u0445 PrimaryKey.","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'writer/'"},{"location":"#read_one_review","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'read_one_review/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0440\u0438\u0446\u0435\u043d\u0437\u0438\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 read_one_review. class read_one_review(View): template_name = 'main/read_one_review.html' def get(self, request, *args, **kwargs): review = get_object_or_404(Review, pk=kwargs['pk']) likes = LikesReview.objects.all() context = {'review': review, 'likes': likes} return render(request, self.template_name, context) def post(self, request, *args, **kwargs): review = get_object_or_404(Review, pk=kwargs['pk']) likes = LikesReview.objects.all() context = {'review':review, 'likes': likes} data = request.POST print(data) if request.POST.get('like'): like = LikesReview.objects.get(id=data.get('like')) like.type = 'LIK' like.save() review = Review.objects.get(id=data.get('like_input')) review.plus_rating += 1 review.minus_rating -= 1 review.save() if request.POST.get('like2'): like = LikesReview() like.type = 'LIK' like.user = User.objects.get(id=request.user.id) like.review = Review.objects.get(id=data.get('like2')) like.save() review = Review.objects.get(id=data.get('like2')) review.plus_rating += 1 review.save() if request.POST.get('dislike'): like = LikesReview.objects.get(id=data.get('dislike')) like.type = 'DIS' like.save() review = Review.objects.get(id=data.get('dislike_input')) review.plus_rating -= 1 review.minus_rating += 1 review.save() if request.POST.get('dislike2'): like = LikesReview() like.type = 'DIS' like.user = User.objects.get(id=request.user.id) like.review = Books.objects.get(id=data.get('dislike2')) like.save() review = Review.objects.get(id=data.get('dislike2')) review.minus_rating += 1 review.save() return render(request, self.template_name, context) \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(read_one_review.html) \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438(Review) \u0438 \u043b\u0430\u0439\u043a\u0438(LikesReview). \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0440\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 \u0438\u0445 PrimaryKey \u0438 \u0440\u0435\u0430\u0437\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u043d\u0438\u044f.","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'read_one_review/'"},{"location":"#discussion_1","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'discussion/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0435\u0439. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 discussion. class discussion(View): template_name = 'main/discussion.html' def get(self, request, *args, **kwargs): discussion = get_object_or_404(Discussion, pk=kwargs['pk']) messages = Message.objects.all() paginator = Paginator(messages, 2) page = self.request.GET.get('page') try: messages = paginator.page(page) except PageNotAnInteger: # \u0415\u0441\u043b\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0446\u0435\u043b\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c, \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 messages = paginator.page(1) except EmptyPage: # \u0415\u0441\u043b\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439, \u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 messages = paginator.page(paginator.num_pages) context = {'discussion': discussion, 'message':messages} return render(request, self.template_name, context) def post(self, request, *args, **kwargs): discussion = get_object_or_404(Discussion, pk=kwargs['pk']) messages = Message.objects.all() paginator = Paginator(messages, 2) page = self.request.GET.get('page') try: messages = paginator.page(page) except PageNotAnInteger: messages = paginator.page(1) except EmptyPage: messages = paginator.page(paginator.num_pages) data = request.POST print(data) message = Message() message.user = User.objects.get(id=request.user.id) message.discussion = discussion message.text = data.get('text') message.save() context = {'discussion': discussion, 'message':messages} return render(request, self.template_name, context) \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(discussion.html) \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438(Discussion) \u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f(Message). \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 \u0438\u0445 PrimaryKey, \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u043a \u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438 \u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435.","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'discussion/'"},{"location":"#read_book","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'read_book/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u043a\u043d\u0438\u0433\u043e\u0439. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 read_book. class read_book(View): template_name = 'main/read_book.html' def get(self, request, *args, **kwargs): books = get_object_or_404(Books, pk=kwargs['pk']) rewies = Review.objects.all() discussion = Discussion.objects.all() likes = Likes.objects.all() data = {'books':books, 'rewies':rewies, 'discussion': discussion, 'likes': likes} return render(request, self.template_name, context=data) def post(self, request, *args, **kwargs): books = get_object_or_404(Books, pk=kwargs['pk']) rewies = Review.objects.all() discussion = Discussion.objects.all() likes = Likes.objects.all() context = {'books':books, 'rewies':rewies, 'discussion': discussion, 'likes': likes} data = request.POST print(data) if request.POST.get('like'): like = Likes.objects.get(id=data.get('like')) like.type = 'LIK' like.save() book = Books.objects.get(id=data.get('like_input')) book.plus_rating += 1 book.minus_rating -= 1 book.save() if request.POST.get('like2'): like = Likes() like.type = 'LIK' like.user = User.objects.get(id=request.user.id) like.book = Books.objects.get(id=data.get('like2')) like.save() book = Books.objects.get(id=data.get('like2')) book.plus_rating += 1 book.save() if request.POST.get('dislike'): like = Likes.objects.get(id=data.get('dislike')) like.type = 'DIS' like.save() book = Books.objects.get(id=data.get('dislike_input')) book.plus_rating -= 1 book.minus_rating += 1 book.save() if request.POST.get('dislike2'): like = Likes() like.type = 'DIS' like.user = User.objects.get(id=request.user.id) like.book = Books.objects.get(id=data.get('dislike2')) like.save() book = Books.objects.get(id=data.get('dislike2')) book.minus_rating += 1 book.save() return render(request, self.template_name, context) \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(read_book.html) \u043a\u043d\u0438\u0433\u0443(Books), \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438(Discussion), \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438(Review) \u0438 \u043b\u0430\u0439\u043a\u0438(Likes). \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u043a\u043d\u0438\u0433\u0438 \u0447\u0435\u0440\u0435\u0437 \u0438\u0445 PrimaryKey, \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438, \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438 \u0438 \u043b\u0430\u0439\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u043a \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043d\u0438\u0433\u0435.","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'read_book/'"},{"location":"#read_article","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'read_article/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0430\u0442\u044c\u0435\u0439. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 read_article. class read_article(View): template_name = 'main/read_article.html' def get(self, request, *args, **kwargs): article = get_object_or_404(Articles, pk=kwargs['pk']) context = {'article': article} return render(request, self.template_name, context) \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0432 \u0448\u0430\u0431\u043b\u043e\u043d(read_article.html) \u0441\u0442\u0430\u0442\u044c\u044e(Articles). \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u044c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0438\u0445 PrimaryKey.","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'read_article/'"},{"location":"#admin_dev","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'admin_dev/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u044c\u044e. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f admin_dev. def admin_dev(request): return render(request, 'main/admin_panel.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(admin_panel.html).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'admin_dev/'"},{"location":"#password_recovery","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'password_recovery/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u044f. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f password_recovery. def password_recovery(request): return render(request, 'main/password_recovery.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(password_recovery.html).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'password_recovery/'"},{"location":"#profile_1","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'profile/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043b\u0438\u0447\u043d\u044b\u043c \u043f\u0440\u043e\u0444\u0438\u043b\u0435\u043c. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f profile. def profile(request): books = Books.objects.all() article = Articles.objects.all() review = Review.objects.all() likes = Likes.objects.all() data = {'article':article, 'books':books, 'review':review, 'likes':likes} return render(request, 'main/personal_account.html', context=data) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(personal_account.html) \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0442\u0443\u0434\u0430 \u0441\u0442\u0430\u0442\u0438\u0438(Articles), \u043a\u043d\u0438\u0433\u0438(Books), \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438(Review), \u043b\u0430\u0439\u043a\u0438(Likes).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'profile/'"},{"location":"#profile_edit","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'profile_edit/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0444\u0438\u043b\u044f. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f profile_edit. def profile_edit(request): if request.method == 'POST': data = request.POST print(data) user = User.objects.get(id=request.user.id) user.username = data.get('login') user.first_name = data.get('name') user.last_name = data.get('surname') user.email = data.get('email') user.profile.image = request.FILES.get('image') user.save() if data.get('old_pass') != \"\": old_password = request.POST.get(\"old_pass\") new_pass = request.POST.get(\"new_pass\") if check_password(old_password, user.password): user.set_password(new_pass) update_session_auth_hash(request, user) user.save() return render(request, 'main/profile.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(profile.html).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'profile_edit/'"},{"location":"#create_author","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'create_author/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u0440\u0430. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f create_author. def create_author(request): if request.method == 'POST': data = request.POST print(data) author = Writer.objects.create() author.name = data.get('name') author.date_life = data.get('date_life') author.biografi = data.get('biografi') author.bibliografi = data.get('bibliografi') author.about_life = data.get('about_life') author.image = request.FILES.get('image') author.save() return render(request, 'main/create_author.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(create_author.html).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'create_author/'"},{"location":"#article_confirmation","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'article_confirmation/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u044c\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f article_confirmation. def article_confirmation(request): articles = Articles.objects.all() if request.method == 'POST': if request.POST.get('disline'): article_id = request.POST.get('disline') article = Articles.objects.get(id=article_id) article.delete() if request.POST.get('accept'): article_id = request.POST.get('accept') article = Articles.objects.get(id=article_id) article.status = True article.save() data = {'articles':articles} return render(request, 'main/article_confirmation.html', context=data) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(article_confirmation.html).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'article_confirmation/'"},{"location":"#admin_create_composition","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'admin_create_composition/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0443 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f admin_create_composition. def admin_create_composition(request): writer = Writer.objects.all() if request.method == 'POST': data = request.POST print(data) author_id = request.POST.get('author_id') book = Books() book.type = \"DEF\" book.author = Writer.objects.get(id=author_id) book.title = data.get('name') book.date = data.get('date') book.discription = data.get('discription') book.anatation = data.get('anatation') book.plus_rating = 0 book.minus_rating = 0 book.status = True book.image = request.FILES.get('image') book.user = User.objects.get(id=request.user.id) book.save() return render(request, 'main/admin_create_composition.html', {'writer':writer}) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(admin_create_composition.html) \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0442\u0443\u0434\u0430 \u0430\u0432\u0442\u043e\u0440\u043e\u0432(Writer).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'admin_create_composition/'"},{"location":"#confirmation_works","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'confirmation_works/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f confirmation_works. def confirmation_works(request): books = Books.objects.all() if request.method == 'POST': if request.POST.get('disline'): book_id = request.POST.get('disline') book = Books.objects.get(id=book_id) book.delete() if request.POST.get('accept'): book_id = request.POST.get('accept') book = Books.objects.get(id=book_id) book.status = True book.save() data = {'books':books} return render(request, 'main/confirmation_works.html', context=data) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(confirmation_works.html) \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0442\u0443\u0434\u0430 \u043a\u043d\u0438\u0433\u0438(Books).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'confirmation_works/'"},{"location":"#creat_composition","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'creat_composition/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f creat_composition. def creat_composition(request): if request.method == 'POST': data = request.POST print(data) book = Books() book.type = \"PRS\" book.author = Writer.objects.get(id=1) book.title = data.get('title') book.discription = data.get('discription') book.anatation = data.get('anatation') book.text = data.get('text') book.plus_rating = 0 book.minus_rating = 0 book.words = data.get('words') book.chapters = data.get('chapters') book.status = False book.image = request.FILES.get('image') book.user = User.objects.get(id=request.user.id) book.save() return render(request, 'main/creat_composition.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(creat_composition.html).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'creat_composition/'"},{"location":"#create_article","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'create_article/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0430\u0442\u044c\u0438 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f create_article. def create_article(request): if request.method == 'POST': data = request.POST print(data) article = Articles() article.article_title = data.get('title') article.discription = data.get('discription') article.content = data.get('content') article.status = False article.image = request.FILES.get('image') article.type = data.get('type') article.user = User.objects.get(id=request.user.id) article.save() return render(request, 'main/create_article.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(create_article.html).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'create_article/'"},{"location":"#create_discussion","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'create_discussion/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f create_discussion. def create_discussion(request): if request.method == 'POST': data = request.POST print(data) book_id = request.POST.get('book_id') discussion = Discussion() discussion.title = data.get('title') discussion.book = Books.objects.get(id=book_id) discussion.save() last_discussion = Discussion.objects.last() message = Message() message.user = User.objects.get(id=request.user.id) message.discussion = Discussion.objects.get(id=last_discussion.id) message.text = data.get('text') message.save() return render(request, 'main/create_discussion.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(create_discussion.html).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'create_discussion/'"},{"location":"#create_rewies","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'create_rewies/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f create_rewies. def create_rewies(request): if request.method == 'POST': data = request.POST print(data) book_id = request.POST.get('book_id') review = Review() review.user = User.objects.get(id=request.user.id) review.book = Books.objects.get(id=book_id) review.title = data.get('title') review.discription = data.get('text') review.minus_rating = 0 review.plus_rating = 0 review.save() return render(request, 'main/create_review.html') \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(create_review.html).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'create_rewies/'"},{"location":"#read_one_book","text":"\u041f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 'read_one_book/' \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0433\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0447\u0442\u0435\u043d\u0438\u044f \u043a\u043d\u0438\u0433\u0438. \u0417\u0430 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 read_one_book. class read_one_book(View): template_name = 'main/read_one_book.html' def get(self, request, *args, **kwargs): books = get_object_or_404(Books, pk=kwargs['pk']) likes = Likes.objects.all() context = {'books': books, 'likes': likes} return render(request, self.template_name, context) def post(self, request, *args, **kwargs): books = get_object_or_404(Books, pk=kwargs['pk']) rewies = Review.objects.all() discussion = Discussion.objects.all() likes = Likes.objects.all() context = {'books':books, 'likes': likes} data = request.POST print(data) if request.POST.get('like'): like = Likes.objects.get(id=data.get('like')) like.type = 'LIK' like.save() book = Books.objects.get(id=data.get('like_input')) book.plus_rating += 1 book.minus_rating -= 1 book.save() if request.POST.get('like2'): like = Likes() like.type = 'LIK' like.user = User.objects.get(id=request.user.id) like.book = Books.objects.get(id=data.get('like2')) like.save() book = Books.objects.get(id=data.get('like2')) book.plus_rating += 1 book.save() if request.POST.get('dislike'): like = Likes.objects.get(id=data.get('dislike')) like.type = 'DIS' like.save() book = Books.objects.get(id=data.get('dislike_input')) book.plus_rating -= 1 book.minus_rating += 1 book.save() if request.POST.get('dislike2'): like = Likes() like.type = 'DIS' like.user = User.objects.get(id=request.user.id) like.book = Books.objects.get(id=data.get('dislike2')) like.save() book = Books.objects.get(id=data.get('dislike2')) book.minus_rating += 1 book.save() return render(request, self.template_name, context) \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0443(read_one_book.html) \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0442\u0443\u0434\u0430 \u043a\u043d\u0438\u0433\u0438(Books) \u0438 \u043b\u0430\u0439\u043a\u0438(Likes).","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 'read_one_book/'"}]}